FROM ruby:2.4-slim-stretch

# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added
RUN groupadd -r redmine && useradd -r -g redmine redmine

RUN set -eux; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		ca-certificates \
		wget \
		\
		bzr \
		git \
		mercurial \
		openssh-client \
		subversion \
		nano \
		\
# https://github.com/docker-library/redmine/issues/132
# (without "gsfonts" we get "Magick::ImageMagickError (non-conforming drawing primitive definition `text' @ error/draw.c/DrawImage/3265):")
		gsfonts \
		imagemagick \
	; \
	rm -rf /var/lib/apt/lists/*

RUN set -eux; \
	savedAptMark="$(apt-mark showmanual)"; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		dirmngr \
		gnupg \
	; \
	rm -rf /var/lib/apt/lists/*; \
	\
	dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"; \
	\
# grab gosu for easy step-down from root
# https://github.com/tianon/gosu/releases
	export GOSU_VERSION='1.10'; \
	wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"; \
	wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"; \
	export GNUPGHOME="$(mktemp -d)"; \
	gpg --no-tty --keyserver keyserver.ubuntu.com --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \
	gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \
	gpgconf --kill all; \
	rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc; \
	chmod +x /usr/local/bin/gosu; \
	gosu nobody true; \
	\
# grab tini for signal processing and zombie killing
# https://github.com/krallin/tini/releases
	export TINI_VERSION='0.18.0'; \
	wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch"; \
	wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc"; \
	export GNUPGHOME="$(mktemp -d)"; \
	gpg --no-tty --keyserver keyserver.ubuntu.com --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5; \
	gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini; \
	gpgconf --kill all; \
	rm -r "$GNUPGHOME" /usr/local/bin/tini.asc; \
	chmod +x /usr/local/bin/tini; \
	tini -h; \
	\
# reset apt-mark's "manual" list so that "purge --auto-remove" will remove all build dependencies
	apt-mark auto '.*' > /dev/null; \
	[ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

# GOI 
ENV RAILS_ENV development

#VOLUME /usr/src/redmine

WORKDIR /usr/src

ENV REDMINE_VERSION 3.4.6
ENV REDMINE_DOWNLOAD_MD5 5f4993446ecf25782f469763c0d32ea1

RUN git clone https://github.com/redmine/redmine.git

WORKDIR /usr/src/redmine

RUN mkdir -p tmp/pdf public/plugin_assets \
	&& chown -R redmine:redmine ./

RUN set -eux; \
	\
	savedAptMark="$(apt-mark showmanual)"; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		dpkg-dev \
		gcc \
		libmagickcore-dev \
		libmagickwand-dev \
		libmariadbclient-dev \
		libpq-dev \
		libsqlite3-dev \
		make \
		patch \
		\
# tiny_tds 1.0.x requires OpenSSL 1.0
# see https://github.com/rails-sqlserver/tiny_tds/commit/3269dd3bcfbe4201ab51aa2870a6aaddfcbdfa5d (tiny_tds 1.2.x+ is required for OpenSSL 1.1 support)
		libssl1.0-dev \
	; \
	rm -rf /var/lib/apt/lists/*; \
	\
# https://github.com/travis-ci/travis-ci/issues/9391 (can't let "tiny_tds" download FreeTDS for us because FTP)
# https://github.com/rails-sqlserver/tiny_tds/pull/384 (newer version uses HTTP!)
# https://github.com/rails-sqlserver/tiny_tds/pull/345 (... but then can't download it for us)
# http://www.freetds.org/files/stable/?C=M;O=D
# (if/when we update to Debian Buster and thus get FreeTDS newer than 0.95 in the distro, we can switch back to simply installing "freetds-dev" from Debian)
# goi
	wget -O freetds.tar.bz2 'http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2'; \
	echo '8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2' | md5sum -c -; \
	mkdir freetds; \
	tar -xf freetds.tar.bz2 -C freetds --strip-components=1; \
	rm freetds.tar.bz2; \
	( cd freetds && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && ./configure --build="$gnuArch" --enable-silent-rules && make -j "$(nproc)" && make -C src install && make -C include install ); \
	rm -rf freetds; \
	bundle config build.tiny_tds --enable-system-freetds;

RUN echo "$RAILS_ENV:" > ./config/database.yml; \
		echo "  adapter: mysql2" >> ./config/database.yml; \
		echo "  host: database" >> ./config/database.yml; \
		echo "  database: redmine_development" >> ./config/database.yml; \
		echo "  username: root" >> ./config/database.yml;

RUN bundle add byebug

RUN bundle install ; \
		cp Gemfile.lock "Gemfile.lock.mysql2";
	
RUN rake generate_secret_token

# need to be launch manually ; use docker exec container bash
#RUN rake db:migrate

VOLUME /usr/src/redmine

#COPY docker-entrypoint.sh /
#ENTRYPOINT ["/docker-entrypoint.sh"]

EXPOSE 3000
#CMD ["rails", "server", "-b", "0.0.0.0"]
#CMD /bin/bash

#ENTRYPOINT ["rails", "server", "-b", "0.0.0.0"]
ENTRYPOINT ["/bin/bash"]

